Best Time to Buy and Sell Stock :

class Solution {
    public int maxProfit(int[] prices) {
        int max = 0;
        int min = Integer.MAX_VALUE;
        for(int i =0; i< prices.length; i++){
            if(prices[i]<min){
                min = prices[i];
            }
            else{
                max = Math.max(max, prices[i]-min);
            }
        }
        return max;
    }
}




3 Sum :

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> output_arr = new LinkedList();

        for(int i=0; i<nums.length-2; i++){
            if(i == 0 || (i>0 && nums[i] != nums[i-1])){
                int low = i+1;
                int high = nums.length-1;
                int sum = 0 - nums[i];

                while(low < high){
                    if(nums[low] + nums[high] == sum){
                        output_arr.add(Arrays.asList(nums[i], nums[low], nums[high]));
                        while(low < high && nums[low] == nums[low+1]) low++;
                        while(low < high && nums[high] == nums[high-1]) high--;

                        low++;
                        high--;
                    }
                    else if(nums[low] + nums[high] > sum){
                        high--;
                    }
                    else{
                        low++;
                    }
                }
            }
        }
        return output_arr;
    }
}
